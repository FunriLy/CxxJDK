################OPTION###################
# release or debug
VERTYPE=RELEASE

KERNEL:=$(shell uname)
LIBDIR = linux
#CPPSTD = c++98
CPPSTD = c++11

ARCH:=$(shell uname -m)
RC:=$(ARCH)
BIT32:=i686
BIT64:=x86_64

$(info KERNEL=$(KERNEL))
$(info ARCH=$(ARCH))

ifeq ($(KERNEL),Darwin)
    LIBDIR = osx
endif

ifeq ($(RC),$(BIT32))
	SHAREDLIB = -lefc32 -leso32 -lrt -lm -ldl -lpthread -lcrypto
else
	SHAREDLIB = -lefc64 -leso64 -liconv -ldl -lpthread -lcrypto
endif

ifeq ($(VERTYPE), RELEASE)
CCOMPILEOPTION = -c -g -O2 -D__MAIN__
CPPCOMPILEOPTION = -std=$(CPPSTD) -c -g -O2 -fpermissive -D__MAIN__
TESTEFC = testefc
TESTC11 = testc11
TESTNIO = testnio
TESTLIBC = testlibc
TESTBSON = testbson
TESTSSL = testssl
TESTUTILS = testutils
else
CCOMPILEOPTION = -c -g -D__MAIN__
CPPCOMPILEOPTION = -std=$(CPPSTD) -c -g -fpermissive -DDEBUG -D__MAIN__
TESTEFC = testefc_d
TESTC11 = testc11_d
TESTNIO = testnio_d
TESTLIBC = testlibc_d
TESTBSON = testbson_d
TESTSSL = testssl_d
TESTUTILS = testutils_d
endif

CCOMPILE = gcc
CPPCOMPILE = g++
INCLUDEDIR = -I.. \
	-I../efc \
	-I/usr/local/Cellar/openssl/1.0.2g/include \

LINK = g++
LINKOPTION = -std=$(CPPSTD) -g
LIBDIRS = -L../lib/$(LIBDIR) -L/usr/local/Cellar/openssl/1.0.2g/lib
APPENDLIB = 

BASE_OBJS = 

TESTEFC_OBJS = testefc.o

TESTC11_OBJS = testc11.o

TESTNIO_OBJS = testnio.o

TESTLIBC_OBJS = testlibc.o

TESTBSON_OBJS = testbson.o

TESTSSL_OBJS = testssl.o

TESTUTILS_OBJS = testutils.o \
				../efc/utils/src/EBoundedInputStream.o \
				../efc/utils/src/EDomainServerSocket.o \
				../efc/utils/src/EDomainSocket.o \

$(TESTEFC): $(BASE_OBJS) $(TESTEFC_OBJS) $(APPENDLIB)
	$(LINK) $(LINKOPTION) -o $(TESTEFC) $(LIBDIRS) $(BASE_OBJS) $(TESTEFC_OBJS) $(SHAREDLIB) $(APPENDLIB)

$(TESTC11): $(BASE_OBJS) $(TESTC11_OBJS) $(APPENDLIB)
	$(LINK) $(LINKOPTION) -o $(TESTC11) $(LIBDIRS) $(BASE_OBJS) $(TESTC11_OBJS) $(SHAREDLIB) $(APPENDLIB)

$(TESTNIO): $(BASE_OBJS) $(TESTNIO_OBJS) $(APPENDLIB)
	$(LINK) $(LINKOPTION) -o $(TESTNIO) $(LIBDIRS) $(BASE_OBJS) $(TESTNIO_OBJS) $(SHAREDLIB) $(APPENDLIB)

$(TESTLIBC): $(BASE_OBJS) $(TESTLIBC_OBJS) $(APPENDLIB)
	$(LINK) $(LINKOPTION) -o $(TESTLIBC) $(LIBDIRS) $(BASE_OBJS) $(TESTLIBC_OBJS) $(SHAREDLIB) $(APPENDLIB)

$(TESTBSON): $(BASE_OBJS) $(TESTBSON_OBJS) $(APPENDLIB)
	$(LINK) $(LINKOPTION) -o $(TESTBSON) $(LIBDIRS) $(BASE_OBJS) $(TESTBSON_OBJS) $(SHAREDLIB) $(APPENDLIB)

$(TESTSSL): $(BASE_OBJS) $(TESTSSL_OBJS) $(APPENDLIB)
	$(LINK) $(LINKOPTION) -o $(TESTSSL) $(LIBDIRS) $(BASE_OBJS) $(TESTSSL_OBJS) $(SHAREDLIB) $(APPENDLIB) -lssl

$(TESTUTILS): $(BASE_OBJS) $(TESTUTILS_OBJS) $(APPENDLIB)
	$(LINK) $(LINKOPTION) -o $(TESTUTILS) $(LIBDIRS) $(BASE_OBJS) $(TESTUTILS_OBJS) $(SHAREDLIB) $(APPENDLIB) -lssl

clean: 
	rm -f $(BASE_OBJS) $(TESTEFC_OBJS) $(TESTC11_OBJS) $(TESTNIO_OBJS) $(TESTLIBC_OBJS) $(TESTBSON_OBJS) $(TESTSSL_OBJS) $(TESTUTILS_OBJS)

all: clean $(TESTEFC) $(TESTC11) $(TESTNIO) $(TESTLIBC) $(TESTBSON) $(TESTSSL) $(TESTUTILS) clean
.PRECIOUS:%.cpp %.c
.SUFFIXES:
.SUFFIXES:  .c .o .cpp

.cpp.o:
	$(CPPCOMPILE) -c -o $*.o $(CPPCOMPILEOPTION) $(INCLUDEDIR)  $*.cpp

.c.o:
	$(CCOMPILE) -c -o $*.o $(CCOMPILEOPTION) $(INCLUDEDIR) $*.c

